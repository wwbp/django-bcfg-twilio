# The manifest for the "web" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: web
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  healthcheck:
    path: '/api/health/'
    grace_period: 120s
    healthy_threshold: 2
  target_container: 'nginx'
  alias: '*.wwbp-bcfg-chatbot.org'

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  build: Dockerfile
  target: production
  # Port exposed through your container to route traffic to it.
  port: 8000

entrypoint: /app/entrypoint.prod.sh

cpu: 1024       # Number of CPU units for the task.
memory: 2048    # Amount of memory in MiB used by the task.
platform: linux/x86_64  # See https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#platform
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.
  vpc:
    security_groups:
      - from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-dbSecurityGroup

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.

variables:                    # Pass environment variables as key value pairs.
  LOG_LEVEL: info
  CERT_FILE: /app/assets/shibcert.pem
  KEY_FILE: /app/assets/shibkey.pem

secrets:
  DB_SECRET:
    from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-dbAuroraSecret
  CELERY_BROKER_HOST: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/RedisEndpoint
  OPENAI_API_KEY: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/OPENAI_API_KEY
  BCFG_API_KEY: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/BCFG_API_KEY
  INBOUND_MESSAGE_API_KEY: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/INBOUND_MESSAGE_API_KEY

environments:
  dev:
    count: 2
    deployment: # The deployment strategy for the "dev" environment.
      rolling: "recreate" # Stops existing tasks before new ones are started for faster deployments.
    variables:
      DJANGO_ENV: dev
      BCFG_DOMAIN: https://dev-2025.joinstarterkit.org
      REQUIRE_SAML_AUTHENTICATION: False
      BASE_ADMIN_URI: https://dev.wwbp-bcfg-chatbot.org/
  test:
    deployment: # The deployment strategy for the "test" environment.
      rolling: "recreate" # Stops existing tasks before new ones are started for faster deployments.
    variables:
      DJANGO_ENV: test
      BCFG_DOMAIN: https://test-2025.joinstarterkit.org
      REQUIRE_SAML_AUTHENTICATION: False
      BASE_ADMIN_URI: https://test.wwbp-bcfg-chatbot.org/
  prod:
    count: 2
    variables:
      DJANGO_ENV: prod
      BCFG_DOMAIN: https://2025.joinstarterkit.org
      REQUIRE_SAML_AUTHENTICATION: False
      BASE_ADMIN_URI: https://app.wwbp-bcfg-chatbot.org/

sidecars:
  nginx:
    port: 80
    image:
      build: nginx/Dockerfile
    variables:
      NGINX_PORT: 80
