# Generated by Django 5.1.8 on 2025-04-17 15:54

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


def populate_group_strategy_phase_config(apps, schema_editor):
    GroupStrategyPhaseConfig = apps.get_model("chat", "GroupStrategyPhaseConfig")
    GroupStrategyPhaseConfig.objects.create(
        group_strategy_phase="before_audience",
        min_wait_seconds=1*60,
        max_wait_seconds=5*60,
    )
    GroupStrategyPhaseConfig.objects.create(
        group_strategy_phase="after_audience",
        min_wait_seconds=6*60,
        max_wait_seconds=6*60,
    )
    GroupStrategyPhaseConfig.objects.create(
        group_strategy_phase="after_reminder",
        min_wait_seconds=2*60,
        max_wait_seconds=2*60,
    )
    GroupStrategyPhaseConfig.objects.create(
        group_strategy_phase="after_followup",
        min_wait_seconds=30*60,
        max_wait_seconds=30*60,
    )

def reverse_populate_group_strategy_phase_config(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ("chat", "0037_historicalindividualpipelinerecord_is_for_group_direct_messaging_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GroupStrategyPhaseConfig",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "group_strategy_phase",
                    models.CharField(
                        choices=[
                            ("before_audience", "Before Audience"),
                            ("after_audience", "After Audience"),
                            ("after_reminder", "After Reminder"),
                            ("after_followup", "After Followup"),
                        ],
                        unique=True,
                    ),
                ),
                ("min_wait_seconds", models.IntegerField()),
                ("max_wait_seconds", models.IntegerField()),
            ],
            options={
                "ordering": ["group_strategy_phase"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalGroupStrategyPhaseConfig",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "group_strategy_phase",
                    models.CharField(
                        choices=[
                            ("before_audience", "Before Audience"),
                            ("after_audience", "After Audience"),
                            ("after_reminder", "After Reminder"),
                            ("after_followup", "After Followup"),
                        ],
                        db_index=True,
                    ),
                ),
                ("min_wait_seconds", models.IntegerField()),
                ("max_wait_seconds", models.IntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical group strategy phase config",
                "verbose_name_plural": "historical group strategy phase configs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RunPython(
            populate_group_strategy_phase_config,
            reverse_populate_group_strategy_phase_config,
        ),
    ]
